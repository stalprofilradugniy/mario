// scripts/level.js

// Импортируем необходимые константы
import { TILE_SIZE, GAME_HEIGHT } from './constants.js';
// Импортируем классы объектов, которые могут появиться на уровне
import { Block } from './block.js';
import { Goomba } from './enemy.js';
// (Предполагается, что классы Player, Enemy, Block также экспортируются из своих файлов)


// Пример данных уровня (2D массив плиток/объектов)
// Каждый элемент в массиве представляет собой тип плитки или объекта:
// 0: Пустота / Воздух
// 1: Земля / Твердый блок
// 2: Кирпичный блок (может ломаться или иметь содержимое)
// 3: Блок со знаком вопроса (имеет содержимое: монета, гриб и т.д.)
// 4: Goomba (враг)
// (Добавьте другие коды для труб, лестниц, флага и т.д.)
const level1_1_data = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 2, 2, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // Goomba и блоки
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // Земля
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // Земля
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // Земля
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // Земля
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] // Земля
];

/**
 * Загружает объекты для заданного уровня.
 * Парсит 2D массив данных уровня и создает экземпляры игровых объектов.
 * @param {Array<Array<number>>} levelData - 2D массив, представляющий данные уровня.
 * @returns {object} Объект, содержащий массивы созданных блоков и врагов, и начальную позицию игрока.
 */
export function loadLevel(levelData) {
    const levelObjects = {
        blocks: [],         // Массив объектов Block
        enemies: [],        // Массив объектов Enemy
        playerStart: null   // Начальная позиция игрока {x, y}
    };

    // Перебираем строки (y-координата)
    for (let row = 0; row < levelData.length; row++) {
        // Перебираем столбцы (x-координата)
        for (let col = 0; col < levelData[row].length; col++) {
            const tileType = levelData[row][col];
            // Вычисляем позицию объекта на canvas
            const x = col * TILE_SIZE;
            const y = row * TILE_SIZE;

            // Создаем объекты в зависимости от типа плитки
            switch (tileType) {
                case 1: // Земля / Твердый блок
                    levelObjects.blocks.push(new Block(x, y, 'solid')); // Создаем твердый блок
                    break;
                case 2: // Кирпичный блок
                    levelObjects.blocks.push(new Block(x, y, 'brick'));
                    break;
                case 3: // Блок со знаком вопроса
                    levelObjects.blocks.push(new Block(x, y, 'question'));
                    break;
                case 4: // Goomba
                    // Создаем врага
                    levelObjects.enemies.push(new Goomba(x, y));
                    // В SMB враги часто стоят на земле, убедимся, что под ними есть твердая плитка
                    // Если в levelData[row+1][col] нет земли (1), это может быть обрыв.
                    // Для простоты в этом примере просто создаем Goomba в указанной позиции.
                    break;
                 // case 5: // Труба (верхняя часть) - пример
                 //      levelObjects.blocks.push(new Block(x, y, 'pipe-top'));
                 //      break;
                 // case 6: // Труба (нижняя часть) - пример
                 //      levelObjects.blocks.push(new Block(x, y, 'pipe-bottom'));
                 //      break;
                 // case 7: // Начальная позиция игрока - пример
                 //     levelObjects.playerStart = { x: x, y: y };
                 //     break;
                // Игнорируем 0 (пустоту)
            }
        }
    }

    // Если начальная позиция игрока не была указана в данных уровня (например, кодом 7)
    // Устанавливаем позицию по умолчанию
    if (levelObjects.playerStart === null) {
         levelObjects.playerStart = { x: TILE_SIZE * 2, y: GAME_HEIGHT - TILE_SIZE * 3 }; // Старт над землей
    }

    // Возвращаем все созданные объекты уровня
    return levelObjects;
}

// (Можно добавить другие уровни или функции для переключения между ними)
